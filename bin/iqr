#!/usr/bin/env python

# iqr
# Jim Bagrow
# Last Modified: 2012-04-12

import sys, os
import math

name = os.path.basename(sys.argv[0])
usage = \
"""Usage: %s

Compute the median, 25th, and 75th percentiles of X-data received from STDIN.
  Output: median 25th-percentile 75th-percentile

Example:
  cat tutorial/x.dat | %s""" % (name,name)


def percentile(N, p):
    """
    Find the percentile of a list of values.
    
    N - is a list of values. Note N MUST BE already sorted.
    p - a float value from 0.0 to 1.0.
    
    Return the percentile of the values in N.
    
    Adapted from: http://code.activestate.com/recipes/511478/ (r1)
    """
    if not N:
        return None
    k = (len(N)-1) * p
    f = math.floor(k)
    c = math.ceil(k)
    if f == c:
        return N[int(k)]
    d0 = N[int(f)] * (c-k)
    d1 = N[int(c)] * (k-f)
    return d0 + d1

if __name__ == '__main__':
    
    if '-h' in sys.argv[1:] or '--help' in sys.argv[1:]:
        sys.exit( usage )
    
    data = [ float(x) for x in sys.stdin if x.strip() ]
    data.sort()
    
    median = percentile(data, 0.50)
    lower  = percentile(data, 0.25)
    upper  = percentile(data, 0.75)
    sys.stdout.write( "%f %f %f\n" % (median, lower, upper) )
    sys.stdout.flush()
